{"ast":null,"code":"import { myFunction } from \"../components/checkOnline\";\nimport { getCheckSync, setSync } from \"../components/sync\";\nimport { addProductOn, addProductOff } from \"../controllers/addProduct\";\nimport { getProductOff, getProductsOn } from \"../controllers/getProduct\";\n\n// myFunction -> component to check if the user is online or offline\nconst check = myFunction();\nexport const addProduct = product => {\n  if (check) {\n    // add a product if your are online\n    addProductOn(product);\n  } else {\n    console.log(check);\n    // add a product in the localStorage if your are offline\n    addProductOff(product);\n  }\n};\nexport const getProduct = async () => {\n  if (check) {\n    // Get products from the Back End -> online\n    const res = await getProductsOn();\n    syncronised();\n    return res;\n  } else {\n    const res = getProductOff();\n    // Get products from the LocalStorage -> offline\n    return res;\n  }\n};\nexport const syncronised = async () => {\n  // GET if is SYNC OR NOT\n  let sync = getCheckSync();\n  console.log(\"GET SYNC:\", sync);\n\n  // Check if the user is online or not\n  if (check && sync == false) {\n    // If he is online GET products from LocalStorage\n    let productsOff = getProductOff();\n\n    // GET products from Back End\n    let productsOn = await getProductsOn();\n    syncONtoOFF(productsOn, productsOff);\n    await syncOFFtoON(productsOff, productsOn);\n\n    // SET sync -> TRUE\n    setSync(true);\n    console.log(\"SET SYNC TRUE\");\n    // RETURN SYNC TRUE\n    return true;\n  }\n};\nconst syncONtoOFF = (productON, productOFF) => {\n  let k = false;\n  for (let i = 0; i < productON.length; i++) {\n    for (let j = 0; j < productOFF.length; j++) {\n      if (productON[i].name == productOFF[j].name) {\n        k = true;\n        break;\n      } else {\n        k = false;\n      }\n    }\n    if (k == false) {\n      addProductOff(productON[i]);\n      console.log(\"productOn updated in productOFF\");\n    }\n  }\n};\nconst syncOFFtoON = async (productOFF, productON) => {\n  let b = false;\n\n  // Check if the product is already updated from local to online\n  for (let i = 0; i < productOFF.length; i++) {\n    // HOLA\n    for (let j = 0; j < productON.length; j++) {\n      // b , , hola\n      if (productOFF[i].name == productON[j].name) {\n        b = true;\n        break;\n      } else {\n        b = false;\n      }\n    }\n    console.log(\"i:\", i);\n    console.log(productsOff[i]);\n    console.log(\"b:\", b);\n    if (b == false) {\n      await addProductOn(productOFF[i]);\n      console.log(\"Product ADD\");\n    }\n  }\n};","map":{"version":3,"names":["myFunction","getCheckSync","setSync","addProductOn","addProductOff","getProductOff","getProductsOn","check","addProduct","product","console","log","getProduct","res","syncronised","sync","productsOff","productsOn","syncONtoOFF","syncOFFtoON","productON","productOFF","k","i","length","j","name","b"],"sources":["C:/Users/guill/Desktop/SOFTWARE MASTER/1 YEAR 1 SEMESTER/Advanced Software Design Techniques/Challenge/RestApi_App_Challenge/FrontEnd/challenge/src/middleware/middleware.js"],"sourcesContent":["import { myFunction } from \"../components/checkOnline\";\r\nimport { getCheckSync, setSync } from \"../components/sync\";\r\nimport { addProductOn, addProductOff } from \"../controllers/addProduct\";\r\nimport { getProductOff, getProductsOn } from \"../controllers/getProduct\";\r\n\r\n\r\n// myFunction -> component to check if the user is online or offline\r\nconst check = myFunction();\r\n\r\nexport const addProduct = (product) => {\r\n \r\n    if(check){\r\n        \r\n        // add a product if your are online\r\n         addProductOn(product);\r\n\r\n    }else{\r\n        console.log(check);\r\n        // add a product in the localStorage if your are offline\r\n        addProductOff(product);\r\n\r\n    }\r\n}\r\n\r\nexport const getProduct = async() => {\r\n    \r\n    if(check){\r\n       \r\n        // Get products from the Back End -> online\r\n        const res =  await getProductsOn();\r\n        syncronised();\r\n\r\n\r\n        return res;\r\n    }else{\r\n        const res = getProductOff();\r\n        // Get products from the LocalStorage -> offline\r\n        return res;    \r\n    }  \r\n}\r\n\r\nexport const syncronised = async() => {\r\n\r\n    // GET if is SYNC OR NOT\r\n    let sync = getCheckSync();\r\n    console.log(\"GET SYNC:\", sync);\r\n\r\n    // Check if the user is online or not\r\n    if(check && sync == false){\r\n        \r\n        // If he is online GET products from LocalStorage\r\n        let productsOff = getProductOff();\r\n\r\n        // GET products from Back End\r\n        let productsOn =  await getProductsOn();\r\n\r\n        syncONtoOFF(productsOn, productsOff);\r\n\r\n        await syncOFFtoON(productsOff,productsOn);\r\n\r\n            \r\n\r\n        // SET sync -> TRUE\r\n        setSync(true);\r\n        console.log(\"SET SYNC TRUE\") \r\n        // RETURN SYNC TRUE\r\n        return true;\r\n         \r\n    }\r\n}\r\n\r\n\r\nconst syncONtoOFF = (productON, productOFF) => {\r\n    let k = false;\r\n            for(let i = 0; i< productON.length; i++){\r\n                for(let j = 0; j < productOFF.length; j++){\r\n                    if(productON[i].name == productOFF[j].name){\r\n                        k = true;\r\n                        break;\r\n                    }else{\r\n                        k = false;\r\n                    }\r\n                }\r\n                if(k == false){\r\n                    addProductOff(productON[i]);\r\n                    console.log(\"productOn updated in productOFF\");\r\n                }\r\n            }\r\n}\r\n\r\nconst syncOFFtoON = async(productOFF, productON) => {\r\n\r\n    let b = false;\r\n\r\n        // Check if the product is already updated from local to online\r\n            for(let i = 0; i < productOFF.length; i++){ // HOLA\r\n                for(let j = 0 ; j < productON.length ; j++){ // b , , hola\r\n                    if(productOFF[i].name == productON[j].name){\r\n                        b = true;\r\n                        break;\r\n                    }else{\r\n                        b = false;\r\n                    }\r\n                    \r\n                }\r\n                console.log(\"i:\", i);\r\n                console.log(productsOff[i]);\r\n                console.log(\"b:\", b);\r\n                if(b == false){\r\n                    await addProductOn(productOFF[i]);\r\n                   console.log(\"Product ADD\");\r\n                   \r\n                }\r\n            }\r\n}\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}