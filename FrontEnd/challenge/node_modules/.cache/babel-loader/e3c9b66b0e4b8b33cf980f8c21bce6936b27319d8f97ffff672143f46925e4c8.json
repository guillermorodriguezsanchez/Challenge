{"ast":null,"code":"import { myFunction } from \"../components/checkOnline\";\nimport { getCheckSync, setSync } from \"../components/sync\";\nimport { addProductOn, addProductOff } from \"../controllers/addProduct\";\nimport { getProductOff, getProductsOn } from \"../controllers/getProduct\";\n\n// myFunction -> component to check if the user is online or offline\nconst check = myFunction();\nexport const addProduct = product => {\n  if (check) {\n    // add a product if your are online\n    addProductOn(product);\n  } else {\n    console.log(check);\n    // add a product in the localStorage if your are offline\n    addProductOff(product);\n  }\n};\nexport const getProduct = async () => {\n  if (check) {\n    // Get products from the Back End -> online\n    const res = await getProductsOn();\n\n    // SYNC\n    syncronised();\n    return res;\n  } else {\n    const res = getProductOff();\n    // Get products from the LocalStorage -> offline\n    return res;\n  }\n};\nexport const syncronised = () => {\n  // GET if is SYNC OR NOT\n  let sync = getCheckSync();\n  console.log(\"GET SYNC:\", sync);\n\n  // Check if the user is online or not\n  if (check && sync == false) {\n    // If he is online GET products from LocalStorage\n    let productsOff = getProductOff();\n\n    // GET products from Back End\n    let productsOn = getProductsOn();\n    let b = false;\n\n    // Check if the product is already updated\n    for (let i = 0; i < productsOff.length; i++) {\n      // HOLA\n      for (let j = 0; j < productsOn.length; j++) {\n        // b , , hola\n        if (productsOff[i].name == productsOn[j].name) {\n          b = true;\n          break;\n        } else {\n          b = false;\n        }\n      }\n      console.log(\"i:\", i);\n      console.log(productsOff[i]);\n      console.log(\"b:\", b);\n      if (b == false) {\n        addProductOn(productsOff[i]);\n        console.log(\"Product ADD\");\n      }\n    }\n\n    // SET sync -> TRUE   \n    setSync(true);\n    console.log(\"SET SYNC TRUE\");\n  } else {\n    console.log(\"offline\");\n  }\n};","map":{"version":3,"names":["myFunction","getCheckSync","setSync","addProductOn","addProductOff","getProductOff","getProductsOn","check","addProduct","product","console","log","getProduct","res","syncronised","sync","productsOff","productsOn","b","i","length","j","name"],"sources":["C:/Users/guill/Desktop/SOFTWARE MASTER/1 YEAR 1 SEMESTER/Advanced Software Design Techniques/Challenge/RestApi_App_Challenge/FrontEnd/challenge/src/middleware/middleware.js"],"sourcesContent":["import { myFunction } from \"../components/checkOnline\";\r\nimport { getCheckSync, setSync } from \"../components/sync\";\r\nimport { addProductOn, addProductOff } from \"../controllers/addProduct\";\r\nimport { getProductOff, getProductsOn } from \"../controllers/getProduct\";\r\n\r\n\r\n// myFunction -> component to check if the user is online or offline\r\nconst check = myFunction();\r\n\r\nexport const addProduct = (product) => {\r\n \r\n    if(check){\r\n        \r\n        // add a product if your are online\r\n         addProductOn(product);\r\n\r\n    }else{\r\n        console.log(check);\r\n        // add a product in the localStorage if your are offline\r\n        addProductOff(product);\r\n\r\n    }\r\n}\r\n\r\nexport const getProduct = async() => {\r\n    \r\n    if(check){\r\n       \r\n        // Get products from the Back End -> online\r\n        const res =  await getProductsOn();\r\n\r\n        // SYNC\r\n        syncronised();\r\n        return res;\r\n    }else{\r\n        const res = getProductOff();\r\n        // Get products from the LocalStorage -> offline\r\n        return res;    \r\n    }  \r\n}\r\n\r\nexport const syncronised = () => {\r\n\r\n\r\n    // GET if is SYNC OR NOT\r\n    let sync = getCheckSync();\r\n    console.log(\"GET SYNC:\", sync);\r\n\r\n    // Check if the user is online or not\r\n    if(check && sync == false){\r\n        \r\n        // If he is online GET products from LocalStorage\r\n        let productsOff = getProductOff();\r\n\r\n        // GET products from Back End\r\n        let productsOn =  getProductsOn();\r\n\r\n        let b = false;\r\n\r\n        // Check if the product is already updated\r\n            for(let i = 0; i < productsOff.length; i++){ // HOLA\r\n                for(let j = 0 ; j < productsOn.length ; j++){ // b , , hola\r\n                    if(productsOff[i].name == productsOn[j].name){\r\n                        b = true;\r\n                        break;\r\n                    }else{\r\n                        b = false;\r\n                    }\r\n                    \r\n                }\r\n                console.log(\"i:\", i);\r\n                console.log(productsOff[i]);\r\n                console.log(\"b:\", b);\r\n                if(b == false){\r\n                    addProductOn(productsOff[i]);\r\n                   console.log(\"Product ADD\");\r\n                   \r\n                }\r\n            }\r\n\r\n        // SET sync -> TRUE   \r\n        setSync(true);\r\n        console.log(\"SET SYNC TRUE\")  \r\n    }else{\r\n        console.log(\"offline\");\r\n    }\r\n}\r\n\r\n\r\n\r\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,2BAA2B;AACtD,SAASC,YAAY,EAAEC,OAAO,QAAQ,oBAAoB;AAC1D,SAASC,YAAY,EAAEC,aAAa,QAAQ,2BAA2B;AACvE,SAASC,aAAa,EAAEC,aAAa,QAAQ,2BAA2B;;AAGxE;AACA,MAAMC,KAAK,GAAGP,UAAU,EAAE;AAE1B,OAAO,MAAMQ,UAAU,GAAIC,OAAO,IAAK;EAEnC,IAAGF,KAAK,EAAC;IAEL;IACCJ,YAAY,CAACM,OAAO,CAAC;EAE1B,CAAC,MAAI;IACDC,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC;IAClB;IACAH,aAAa,CAACK,OAAO,CAAC;EAE1B;AACJ,CAAC;AAED,OAAO,MAAMG,UAAU,GAAG,YAAW;EAEjC,IAAGL,KAAK,EAAC;IAEL;IACA,MAAMM,GAAG,GAAI,MAAMP,aAAa,EAAE;;IAElC;IACAQ,WAAW,EAAE;IACb,OAAOD,GAAG;EACd,CAAC,MAAI;IACD,MAAMA,GAAG,GAAGR,aAAa,EAAE;IAC3B;IACA,OAAOQ,GAAG;EACd;AACJ,CAAC;AAED,OAAO,MAAMC,WAAW,GAAG,MAAM;EAG7B;EACA,IAAIC,IAAI,GAAGd,YAAY,EAAE;EACzBS,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEI,IAAI,CAAC;;EAE9B;EACA,IAAGR,KAAK,IAAIQ,IAAI,IAAI,KAAK,EAAC;IAEtB;IACA,IAAIC,WAAW,GAAGX,aAAa,EAAE;;IAEjC;IACA,IAAIY,UAAU,GAAIX,aAAa,EAAE;IAEjC,IAAIY,CAAC,GAAG,KAAK;;IAEb;IACI,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,WAAW,CAACI,MAAM,EAAED,CAAC,EAAE,EAAC;MAAE;MACzC,KAAI,IAAIE,CAAC,GAAG,CAAC,EAAGA,CAAC,GAAGJ,UAAU,CAACG,MAAM,EAAGC,CAAC,EAAE,EAAC;QAAE;QAC1C,IAAGL,WAAW,CAACG,CAAC,CAAC,CAACG,IAAI,IAAIL,UAAU,CAACI,CAAC,CAAC,CAACC,IAAI,EAAC;UACzCJ,CAAC,GAAG,IAAI;UACR;QACJ,CAAC,MAAI;UACDA,CAAC,GAAG,KAAK;QACb;MAEJ;MACAR,OAAO,CAACC,GAAG,CAAC,IAAI,EAAEQ,CAAC,CAAC;MACpBT,OAAO,CAACC,GAAG,CAACK,WAAW,CAACG,CAAC,CAAC,CAAC;MAC3BT,OAAO,CAACC,GAAG,CAAC,IAAI,EAAEO,CAAC,CAAC;MACpB,IAAGA,CAAC,IAAI,KAAK,EAAC;QACVf,YAAY,CAACa,WAAW,CAACG,CAAC,CAAC,CAAC;QAC7BT,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;MAE7B;IACJ;;IAEJ;IACAT,OAAO,CAAC,IAAI,CAAC;IACbQ,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;EAChC,CAAC,MAAI;IACDD,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;EAC1B;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}